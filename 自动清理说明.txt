================================================================================
🗑️  自动清理中间文件功能说明
================================================================================

✨ 新功能：处理完成后自动清理

现在，每次处理完一个 PDF 文献后，系统会自动删除所有中间文件，只保留最终的
总结结果，让输出目录保持整洁。

================================================================================
📦 保留的文件（最终结果）
================================================================================

每个 PDF 处理完成后，只保留 2 个文件：

1. xxx_Filtered_Abstract_Summarized.txt
   • 详细总结，包含每个段落的参数提取结果
   • 适合详细查看各项实验条件

2. xxx_Filtered_Abstract_Overall.txt
   • 整篇文献的汇总总结
   • 适合快速了解文献核心内容

示例：
  Embedding_101021acsoprd7b00291_Filtered_Abstract_Summarized.txt (7.2 KB)
  Embedding_101021acsoprd7b00291_Filtered_Abstract_Overall.txt (1.7 KB)

================================================================================
🗑️  自动删除的中间文件
================================================================================

以下中间文件会在步骤5完成后自动删除：

【步骤1：PDF转文本】
  • 101021acsoprd7b00291.txt (原始PDF转文本)
  • 101021acsoprd7b00291_other.txt (结构化解析)

【步骤2：文本预处理】
  • Processed_101021acsoprd7b00291.txt (预处理后的文本)

【步骤3：嵌入相似度筛选】
  • Embedding_101021acsoprd7b00291.txt (相似度筛选结果)

【步骤4：LLM内容过滤】
  • Embedding_101021acsoprd7b00291_Filtered.txt (过滤后的段落)

【步骤5：文本抽象】
  • Embedding_101021acsoprd7b00291_Filtered_Abstract.txt (抽象文本)

【其他】
  • xxx_Summarized.tsv (表格文件)
  • xxx_Summarized.md (Markdown文件)

这些文件在处理流程中临时产生，最终会被自动清理。

================================================================================
🚀 如何使用
================================================================================

【方法1：使用 Notebook（推荐）】

1. 打开 OSSExtractor_Debug.ipynb
2. 依次运行步骤1-5
3. 步骤5完成后，会自动显示：

   🗑️  清理中间文件...
       ✓ 已删除: 101021acsoprd7b00291.txt
       ✓ 已删除: 101021acsoprd7b00291_other.txt
       ✓ 已删除: Processed_101021acsoprd7b00291.txt
       ✓ 已删除: Embedding_101021acsoprd7b00291.txt
       ✓ 已删除: Embedding_101021acsoprd7b00291_Filtered_Abstract.txt
     🎉 清理完成，删除了 5 个中间文件

   📦 最终保留文件:
     • Embedding_101021acsoprd7b00291_Filtered_Abstract_Summarized.txt (详细总结)
     • Embedding_101021acsoprd7b00291_Filtered_Abstract_Overall.txt (整篇汇总)

【方法2：使用 Python 代码】

from Unified_Text_Processor import UnifiedTextProcessor

processor = UnifiedTextProcessor()
result = processor.process_text_file_comprehensive(
    file_path='Embedding_xxx.txt',
    mode='summarize'  # 或 'comprehensive'
)

# 清理会自动执行

================================================================================
⚙️  清理时机
================================================================================

自动清理发生在以下情况：

• mode='summarize'：完成参数总结后自动清理
• mode='comprehensive'：完成全部处理后自动清理

清理逻辑内置在 Unified_Text_Processor.py 中，无需手动调用。

================================================================================
🔍 清理前后对比
================================================================================

【清理前】7 个文件，占用空间：~111 KB

  101021acsoprd7b00291.txt (32.4 KB)
  101021acsoprd7b00291_other.txt (32.3 KB)
  Processed_101021acsoprd7b00291.txt (27.0 KB)
  Embedding_101021acsoprd7b00291.txt (8.3 KB)
  Embedding_101021acsoprd7b00291_Filtered_Abstract.txt (4.0 KB)
  Embedding_101021acsoprd7b00291_Filtered_Abstract_Summarized.txt (7.2 KB)
  Embedding_101021acsoprd7b00291_Filtered_Abstract_Overall.txt (1.7 KB)

【清理后】2 个文件，占用空间：~9 KB ✅

  Embedding_101021acsoprd7b00291_Filtered_Abstract_Summarized.txt (7.2 KB)
  Embedding_101021acsoprd7b00291_Filtered_Abstract_Overall.txt (1.7 KB)

节省空间：~102 KB (92%)

================================================================================
💡 提示
================================================================================

• 如果你需要保留中间文件用于调试，可以在步骤5之前复制一份
• 中间文件一旦删除无法恢复，但可以重新运行流程生成
• 最终结果文件不会被删除，可以安全保存

================================================================================
🔧 测试清理功能
================================================================================

运行测试脚本查看清理预览（不会真正删除文件）：

  python3 test_cleanup.py

这会显示哪些文件会被保留，哪些会被删除。

================================================================================
📚 相关文件
================================================================================

• Text Extraction/Unified_Text_Processor.py (第586-634行)
  → 包含自动清理逻辑

• OSSExtractor_Debug.ipynb (Cell 29)
  → 步骤5会自动触发清理

• test_cleanup.py
  → 测试脚本，预览清理效果

================================================================================
❓ 常见问题
================================================================================

Q: 可以关闭自动清理吗？
A: 目前清理是自动的。如果需要保留中间文件，可以在步骤5之前复制输出目录。

Q: 如果处理失败，中间文件会被删除吗？
A: 不会。清理只在步骤5成功完成后执行。

Q: 可以自定义保留哪些文件吗？
A: 目前固定保留 _Summarized.txt 和 _Overall.txt。如需修改，可编辑
   Unified_Text_Processor.py 的清理逻辑。

Q: 批量处理多个 PDF 时，每个都会清理吗？
A: 是的，每个 PDF 处理完成后都会独立清理其中间文件。

================================================================================
✅ 总结
================================================================================

自动清理功能让你：
• 💾 节省磁盘空间（减少 90%+ 的文件）
• 🧹 保持输出目录整洁
• 🎯 只关注最终结果
• 🚀 无需手动删除中间文件

处理流程完全自动化，你只需运行 Notebook，最终获得干净的结果文件！

================================================================================

